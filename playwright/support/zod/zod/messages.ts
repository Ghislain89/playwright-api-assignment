/**
 * Generated by orval v7.7.0 üç∫
 * Do not edit manually.
 * Restful Booker Platform API
 * API documentation for the Restful Booker Platform
 * OpenAPI spec version: 1.0.0
 */
import {
  z as zod
} from 'zod';



/**
 * @summary Get all messages
 */
export const getApiMessagesResponse = zod.object({
  "success": zod.boolean().optional(),
  "data": zod.array(zod.object({
  "id": zod.string().optional(),
  "userId": zod.string().optional(),
  "content": zod.string().optional(),
  "createdAt": zod.string().datetime().optional(),
  "updatedAt": zod.string().datetime().optional()
})).optional()
})

/**
 * @summary Create new message
 */
export const postApiMessagesBody = zod.object({
  "content": zod.string()
})

/**
 * @summary Get message by ID
 */
export const getApiMessagesIdParams = zod.object({
  "id": zod.string().describe('Message ID')
})

export const getApiMessagesIdResponse = zod.object({
  "success": zod.boolean().optional(),
  "data": zod.object({
  "id": zod.string().optional(),
  "userId": zod.string().optional(),
  "content": zod.string().optional(),
  "createdAt": zod.string().datetime().optional(),
  "updatedAt": zod.string().datetime().optional()
}).optional()
})

/**
 * @summary Update message (admin only)
 */
export const putApiMessagesIdParams = zod.object({
  "id": zod.string().describe('Message ID')
})

export const putApiMessagesIdBody = zod.object({
  "content": zod.string()
})

export const putApiMessagesIdResponse = zod.object({
  "success": zod.boolean().optional(),
  "data": zod.object({
  "id": zod.string().optional(),
  "content": zod.string().optional(),
  "updatedAt": zod.string().datetime().optional()
}).optional()
})

/**
 * @summary Delete message (admin only)
 */
export const deleteApiMessagesIdParams = zod.object({
  "id": zod.string().describe('Message ID')
})

export const deleteApiMessagesIdResponse = zod.object({
  "success": zod.boolean().optional(),
  "message": zod.string().optional()
})

